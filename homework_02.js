'use strict'
// Задание №1.
// Объясните почему код даёт именно такие результаты ?

// пример 1 
// let a = 1, b = 1, c, d;
// c = ++a;
// alert(c); // ответ: 2 
// Потому что a = 1, а префиксный инкремент ++a сначала увеличит его на 1 и только потом выведет.

// пример 2 
// d = b++;
// alert(d);
//ответ: 1 
// Потому что b = 1 и постфиксный инкремент b++ сначала выведет значение b и только потом увеличит его на 1.

// пример 3 
// c = 2 + ++a;
// alert(c);
//ответ: 5 
// Из первого примера a = 2, здесь его ещё раз увеличили на 1 (++a) и сложили с 2, получилось 5.

// пример 4 
// d = 2 + b++;
// alert(d);
// ответ: 4 
// b после увеличения на 1 в примере 2 стало равно 2, складываем с 2, получаем 4.

// alert(a); //3 см. пример 3
// alert(b); //3 b было равно 1, потом после примера 2 стало равно 2, в примере 4 после инкрементирования на 1 b стало равно 3.



// Задание №2. 
// Чему будут равны переменные x и a в примере ниже?
// Написать почему так произошло (описать последовательность действий).
// let a = 2;
// let x = 1 + (a *= 2);
// a сначала будет равно 2, но после умножения на 2 (a *= 2 или a = a * 2) ей присвоится 4.
// x будет равен 5, т. к. сначала переменной a присвоится значение 4 из выражения.

// Задание №3.
// Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
// Затем написать скрипт, который работает по следующему принципу:
// - если a и b положительные, вывести их разность (ноль можно считать положительным числом);
// - если а и b отрицательные, вывести их произведение;
// - * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
let a = 5, b = -3;
if (a >= 0 && b >= 0) {
    alert(a - b)
}
else if (a < 0 && b < 0) {
    alert(a * b)
}
else if ((a >= 0 && b < 0) || (a < 0 && b >= 0)) {
    alert(a + b)
}


// Задание №4.
// Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя параметрами.
// Т.е. например, функция для сложения должна принимать два числа, складывать их и возвращать результат.
// Обязательно использовать оператор return.

/**
 * Функция сложения двух чисел
 * @param {number} a Первое число
 * @param {number} b Второе число
 */
function sumNumbers(a, b) {
    return a + b
}


/**
 * Функция вычитания двух чисел
 * @param {number} a Первое число
 * @param {number} b Второе число
 */
function subNumbers(a, b) {
    return a - b
}


/**
 * Функция умножения двух чисел
 * @param {number} a Первое число
 * @param {number} b Второе число
 */
function multyNumbers(a, b) {
    return a * b
}


/**
 * Функция деления двух чисел
 * @param {number} a Первое число
 * @param {number} b Второе число
 */
function divNumbers(a, b) {
    return (a / b).toFixed(2)
}


// проверка вызова функций
alert(sumNumbers(24.8, -43))
alert(subNumbers(12, 9))
alert(multyNumbers(0, 65))
alert(divNumbers(25, 0))
alert(sumNumbers(subNumbers(19, 5), divNumbers(13, -94)))


// Задание №5.
// Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
// где arg1, arg2 - значения аргументов, operation - строка с названием операции. В зависимости от
// переданного значения операции (использовать switch) выполнить одну из арифметических операций
// (использовать функции из задания 4) и вернуть полученное значение.
/**
 * Функция математических операций над двумя числами.
 * @param {number} arg1 Первое число
 * @param {number} arg2 Второе число
 * @param {String} operation Требуемая операция
 */
function mathOperation(arg1, arg2, operation = null) {
    operation = prompt('Введите необходимую операцию из списка: "+", "-", "*", "/" => ')
    switch (operation) {
        case "+":
            alert(sumNumbers(arg1, arg2));
            break;
        case "-":
            alert(subNumbers(arg1, arg2));
            break;
        case "*":
            alert(multyNumbers(arg1, arg2));
            break;
        case "/":
            alert(divNumbers(arg1, arg2));
            break;
        default:
            alert('вы ввели не тот символ');
    }
}


mathOperation(25, 36)

// Задание №6**.
// (Это задание не является частью курса, можете его не делать, оно для тех кому
// мало обычных заданий, требует времени и возможно гугления, делайте по желанию.)
// Программа должна спросить у пользователя число, это будет количество денег,
// которое он хочет положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
// "Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
// "Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
// "Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
// То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного числа.
let stringMoney = prompt('Введите количество денег для вклада: ')
// let stringMoney = String(money); Т. к. prompt (без +) запоминает строку, думаю это не нужно переводить
// введённое число в число и потом опять в строку (просто подсказки смутили).
let lastCharacter = stringMoney.charAt(stringMoney.length - 1);
if ((stringMoney.charAt(stringMoney.length - 2)) != 1) {
    switch (lastCharacter) {
        case '0':
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
            alert(`Ваша сумма в ${stringMoney} рублей успешно зачислена`);
            break;
        case '1':
            alert(`Ваша сумма в ${stringMoney} рубль успешно зачислена`);
            break;
        case '2':
        case '3':
        case '4':
            alert(`Ваша сумма в ${stringMoney} рубля успешно зачислена`);
            break;
    }
}
else {
    alert(`Ваша сумма в ${stringMoney} рублей успешно зачислена`);
}
